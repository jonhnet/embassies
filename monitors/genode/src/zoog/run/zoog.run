#
# Build
#

build {
	core
	init
	zoog
	drivers/input/ps2
	drivers/timer
	drivers/pci
	drivers/nic
	drivers/atapi

	drivers/framebuffer
	server/nitpicker
}

create_boot_directory

#
# Generate config
#

set config {
<config verbose="yes">
	<parent-provides>
		<service name="ROM"/>
		<service name="RAM"/>
		<service name="IRQ"/>
		<service name="IO_MEM"/>
		<service name="IO_PORT"/>
		<service name="CAP"/>
		<service name="PD"/>
		<service name="RM"/>
		<service name="CPU"/>
		<service name="LOG"/>
		<service name="SIGNAL"/>
	</parent-provides>
	<default-route>
		<any-service> <parent/> <any-child/> </any-service>
	</default-route>
	<start name="timer">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Timer"/></provides>
	</start>
	<start name="nic_drv">
		<resource name="RAM" quantum="2M"/>
		<provides> <service name="Nic"/> </provides>
	</start>
}

# this conditional stuff means we should be able to wind
# the linux build back through here, if we have the patience...
append_if [have_spec pci] config {
	<start name="pci_drv">
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="PCI"/> </provides>
	</start>
	<start name="atapi_drv" ata="yes">
		<config ata="yes" />
		<resource name="RAM" quantum="1M"/>
		<provides> <service name="Block"/> </provides>
	</start>
}

append_if [have_spec vesa] config {
	<start name="vesa_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec pl11x] config {
	<start name="pl11x_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Framebuffer"/></provides>
	</start>}

append_if [have_spec ps2] config {
	<start name="ps2_drv">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Input"/></provides>
	</start> }

append config {
	<start name="nitpicker">
		<resource name="RAM" quantum="1M"/>
		<provides><service name="Nitpicker"/></provides>
	</start>
}

# this giant quantum takes up whatever init has left, so it needs
# to run last.
append config {
	<start name="zoog_pal_00">
		<binary name="zoog_pal" />
		<resource name="RAM" quantum="10M"/>
	</start>
	<start name="zoog_pal_01">
		<binary name="zoog_pal" />
		<resource name="RAM" quantum="10M"/>
	</start>
	<start name="zoog_monitor">
		<resource name="RAM" quantum="2G"/>
		<provides><service name="ZoogMonitor"/></provides>
	</start>
#	<start name="zoog_pal_02">
#		<binary name="zoog_pal" />
#		<resource name="RAM" quantum="20M"/>
#	</start>
#
#	<start name="uart_drv">
#		<resource name="RAM" quantum="1M"/>
#		<provides><service name="Terminal"/></provides>
#		<config>
#			<policy label="gdb_monitor" uart="1"/>
#		</config>
#	</start>
#	<start name="gdb_monitor">
#		<resource name="RAM" quantum="2G"/>
#		<config><targe name="zoog_pal"/></config>
#	</start>
</config>
}

	
install_config $config

#
# Boot image
#

set boot_modules {
	core
	init
	zoog_monitor
	zoog_pal
	timer
	nic_drv
	atapi_drv
	vesa_drv
	nitpicker
}
lappend_if [have_spec pci] boot_modules pci_drv
lappend_if [have_spec linux] boot_modules fb_sdl
lappend_if [have_spec pci]   boot_modules pci_drv
lappend_if [have_spec vesa]  boot_modules vesa_drv
lappend_if [have_spec ps2]   boot_modules ps2_drv
lappend_if [have_spec pl11x] boot_modules pl11x_drv
build_boot_image $boot_modules

set TAPDEV tap3
append qemu_args " -nographic -m 1020M "
append_if [have_spec x86]     qemu_args " -net nic,model=pcnet -net tap,ifname=$TAPDEV,script=no,downscript=no"

run_genode_until forever
